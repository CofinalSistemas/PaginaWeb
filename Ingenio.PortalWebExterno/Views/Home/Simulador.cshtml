@model Ingenio.PortalWebExterno.Models.SimuladorCredito

@using (Html.BeginForm())
{
<div class="form-horizontal">
    <h4>Simulador</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Capital, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Capital, new { htmlAttributes = new { @class = "form-control", @id = "monto_capital",@placeholder ="Ingresar un valor de 500.000 a 1'000.000" }})
            @Html.ValidationMessageFor(model => model.Capital, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Periodo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Periodo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Periodo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-4">
            <input type="submit" value="Enviar" class="myButtons" />
            <a href="/Home/Simulador" class="myButtons centerSpan">Resetear</a>
        </div>
    </div>
</div>
}

@{

    if (IsPost)
    {
        <p>El capital es @Model.Capital</p> 
        if (Model.Capital >= 500000 & Model.Capital <= 1000000000)
         {
             <p>Este es un Post</p>
            <p>El capital es @Model.Capital</p>
         }
    }
    else
    {
        <p>Aqui  apenas entro</p>
    }
    @*Model.Capital = "3000";
        <p> El nombre es: @Model.Capital</p>*@
}
<div>
    @Html.ActionLink("home", "simulador")
</div>

<script>
    const capital = document.getElementById('monto_capital');
    function isCharacterALetter(char) {
        return (/[a-zA-Z]/).test(char)
    }

    capital.addEventListener('input', (letra) => {
        const valor = letra.target.value;
        console.log(`El valor es: ${valor.charAt(valor.length - 1)}`)
        //console.log(letra.target.value[1])
        if (isCharacterALetter(valor.charAt(valor.length - 1))) {
            console.log("Borro");
            setTimeout(() => {
                capital.value = capital.value.substring(0, capital.value.length - 1);
            }, "100")
        } 
    });

    $("#monto_capital").on({
        "focus": function (event) {
            $(event.target).select();
        },
        "keyup": function (event) {
            $(event.target).val(function (index, value) {
                return value.replace(/\D/g, "")
                    .replace(/([0-9])([0-9]{2})$/, '$1.$2')
                    .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
            });
        }
    });

</script>